# -*- coding: utf-8 -*-
"""Split PDF in Sets of 19 Pages

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1keTs9PSf4sla3GQnyEU7sTDvOWZEcsnk

# Working: splitting into sets of 19 in directory with same name as PDF-file
"""

# Commented out IPython magic to ensure Python compatibility.
from google.colab import drive
drive.mount('/gdrive')
# %cd /gdrive

import os

!pip install PyMuPDF
import glob, sys, fitz

!pip install PyPDF2
from PyPDF2 import PdfFileWriter, PdfFileReader

folder_path = "/gdrive/MyDrive/RescueOMR_NAW-Test/" # folder where all PDFs for splitting will reside
all_files = glob.glob(folder_path + "*.pdf") # finds all PDFs in path from folder

for filename in all_files:
  print(filename)
  filename_shortened = filename.replace("/gdrive/MyDrive/RescueOMR_NAW-Test/","") # anzupassen für Production
  filename_shortened = filename_shortened.replace(".pdf","") # maybe not needed
  dir_name = "{}{}".format(folder_path, filename_shortened)
  #create directory command
  if os.path.exists(dir_name) == False:
    os.makedirs(dir_name, exist_ok=False) # only create if not existing? TRY EXCEPT. unten bei save image Pfad anpassen!
  os.chdir(dir_name) #CHANGE TO DIRECTORY NEEDED?

  doc = fitz.open(filename)  # open document
  # CREATE EXCEPTION WITH CONTINUATION WHEN NOT 19 PAGES IN DOCUMENT
  if doc.page_count % 19 == 0:
    print("OK: vermutlich vollständige Sets mit allen Seiten")
  else:
    print("ERROR: Falschen Seitenanzahl ({} Seite/n). Ein oder mehrere Testhefte sind unvollständig".format(doc.page_count))
    ## ABORT!

  splitted_pdf = "{}_splitted.pdf".format(filename_shortened) # legacy? No more needed?

input_pdf = PdfFileReader(filename)

start = 0
  end = 19
  check = 0
  split_runs = int(doc.page_count/19)
  print("Necessary numbers of split runs: {}".format(split_runs))

  for split_run in range(split_runs): # how many splitting runs needed?
    print("run")
    new_pdf = PdfFileWriter()
    for page_num in range(start, end):
      new_pdf.addPage(input_pdf.getPage(page_num))
      #print(page_num)
      new_name="{}/{}_split-run-{}.pdf".format(dir_name, filename_shortened, split_run+1)
      with open(new_name, "wb") as output_stream:
        new_pdf.write(output_stream)
    output_stream.close()
    start += 19
    end += 19
    check += 1 #to check if splits complete. 

  if check == split_runs:
    print("Splitted successfully {} times.".format(split_runs))
  else:
    print("Splitting not successful. Only {} out of {} times registered.".format(check, split_runs+1))